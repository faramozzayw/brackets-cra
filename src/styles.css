:root {
	--stack-border: 5px;
	--scrollbar-track-color: whitesmoke;
	--scrollbar-thumb-color: darkgray;
	--basic-anim-duration: 1s;
	--stack-solid-border: var(--stack-border) solid firebrick;
	--stack-dashed-border: var(--stack-border) dashed firebrick;
}

html {
	background-color: whitesmoke;
}

html {
	scrollbar-color: var(--scrollbar-thumb-color) var(--scrollbar-track-color);
	scrollbar-width: auto;
}

body::-webkit-scrollbar-track {
	background-color: var(--scrollbar-track-color);
}

body::-webkit-scrollbar {
	width: 0.75rem;
	background-color: var(--scrollbar-track-color);
}

body::-webkit-scrollbar-thumb {
	background-color: var(--scrollbar-thumb-color);
	outline: 1px solid slategrey;
}

main {
	--padding-value: 4em;

	margin: 0;
	padding-top: var(--padding-value);
	padding-bottom: var(--padding-value);
}

form {
	margin-bottom: 3rem;
}

#stack-section {
	display: flex;
	flex-flow: row;
	justify-content: center;
	align-items: flex-end;
}

.stack {
	margin: 4vw;

	min-width: 10vmin;
	max-width: 20vmin;
}

.stack li {
	padding: 0.45vmin 1.125vmin;
	margin: 0 1vw;

	text-align: center;

	font-size: 1.5rem;
	font-weight: bold;

	border-right: var(--stack-solid-border);
	border-left: var(--stack-solid-border);
}

.stack .stack-item:first-child {
	border-top: var(--stack-solid-border);
}

.stack .stack-item:not(:last-child) {
	border-bottom: var(--stack-dashed-border);
}

.stack .stack-item:last-child {
	border-bottom: var(--stack-solid-border);
}

.stack .stack-item.pending {
	background-color: lightgray;
}

.stack .stack-item.resolve {
	background-color: yellowgreen;
}

.stack .stack-item.reject {
	background-color: orangered;
}

.stack .stack-item.null {
	background-color: palevioletred;
}

.stack.def .stack-item.pending.trash:first-child {
	animation: process-data-to-trash var(--basic-anim-duration) forwards normal;
}

.stack.def .stack-item.pending.left:first-child {
	animation: process-data-to-resolve var(--basic-anim-duration) forwards normal;
}

.stack.tmp .stack-item:not(.null)[data-show-anim="true"] {
	animation: add-elem var(--basic-anim-duration) normal forwards ease-in-out;
}

@keyframes process-data {
	50% {
		background-color: yellowgreen;
		border-bottom: var(--stack-border) solid firebrick;
	}

	75% {
		opacity: 1;
	}

	to {
		border-bottom: var(--stack-border) solid firebrick;
		transform: translate(0, -100%);
		opacity: 0;
	}
}

@keyframes process-data-to-resolve {
	50% {
		background-color: yellowgreen;
		border-bottom: var(--stack-border) solid firebrick;
	}

	75% {
		transform: translate(0, -100%);
		border-bottom: var(--stack-border) solid firebrick;
	}

	to {
		transform: translate(100%, -100%) scale(0.5);
	}
}

@keyframes process-data-to-trash {
	25% {
		background-color: yellowgreen;
		border-bottom: var(--stack-border) solid firebrick;
	}

	50% {
		transform: translate(0, -100%);
		opacity: 1;
	}

	75% {
		border-bottom: var(--stack-border) solid firebrick;
		transform: translate(-200%, -100%);
		opacity: 0.5;
	}

	80% {
		transform: translate(-100%, -100%) rotate(360deg);
	}

	to {
		--final-color: firebrick;

		transform: translate(-200%, -100%) rotate(360deg) scale(0);
		opacity: 0;

		border-color: var(--final-color);
		background-color: var(--final-color);
		color: var(--final-color);
	}
}

@keyframes delete-elem {
	from {
		opacity: 1;
	}

	to {
		opacity: 0;
		transform: scale(0);
	}
}

@keyframes add-elem {
	from {
		opacity: 0;
		transform: translate(0, -200%) scale(0.5);
	}

	to {
		opacity: 1;
		transform: translate(0, 0%) scale(1);
	}
}

@media screen and (max-width: 500px) {
	.stack {
		margin: 4vw;

		min-width: 15vmin;
		max-width: 25vmin;
	}

	.stack li {
		padding: 1.25vmin 2vmin;
		margin: 0 1vw;

		font-size: 1.25rem;
	}
}
